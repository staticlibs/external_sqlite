
all:
	@if exist "${CMAKE_CURRENT_BINARY_DIR}/sqlite" echo "flag" > "${CMAKE_CURRENT_BINARY_DIR}/sqlite_exists.flag"
	@if exist "${CMAKE_CURRENT_BINARY_DIR}/sqlite_exists.flag" echo "[${CMAKE_CURRENT_BINARY_DIR}/sqlite] directory found, skipping build"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/sqlite_exists.flag" xcopy /s /i /q "${CMAKE_CURRENT_LIST_DIR}/sqlite" "${CMAKE_CURRENT_BINARY_DIR}/sqlite"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/sqlite_exists.flag" echo f | xcopy /f /y "${CMAKE_CURRENT_LIST_DIR}/manifests/manifest" "${CMAKE_CURRENT_BINARY_DIR}/sqlite"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/sqlite_exists.flag" echo f | xcopy /f /y "${CMAKE_CURRENT_LIST_DIR}/manifests/manifest.uuid" "${CMAKE_CURRENT_BINARY_DIR}/sqlite"
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/sqlite_exists.flag" pushd "${CMAKE_CURRENT_BINARY_DIR}/sqlite" & nmake /nologo -f Makefile.msc & popd
	@if not exist "${CMAKE_CURRENT_BINARY_DIR}/sqlite_exists.flag" echo f | xcopy /f /y "${CMAKE_CURRENT_BINARY_DIR}/sqlite/libsqlite3.lib" "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libsqlite3.lib"
